name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    # --- API ---
    - name: Build da imagem Docker da API
      run: docker build -t myapp/api:latest -f src/API/Dockerfile .

    - name: Exportar imagem da API
      run: docker save myapp/api:latest | gzip > ./image-api.tar.gz

    # --- WEB ---
    - name: Build da imagem Docker do Web
      run: docker build -t myapp/web:latest -f web/Dockerfile .

    - name: Exportar imagem do Web
      run: docker save myapp/web:latest | gzip > ./image-web.tar.gz

    # --- DEBUG ---
    - name: Verificar arquivos
      run: ls -lh ./image-*.tar.gz docker-compose.yml

    # --- ENVIO PARA VPS ---
    - name: Enviar arquivos para a VPS (sem .env)
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VM_IP }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "image-api.tar.gz,image-web.tar.gz,docker-compose.yml"
        target: "/home/${{ secrets.VM_USER }}/app"

    # --- DEPLOY ---
    - name: Rodar docker-compose na VPS com imagens já carregadas
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VM_IP }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 60m
        command_timeout: 60m
        script: |
          cd /home/${{ secrets.VM_USER }}/app
          docker compose down --remove-orphans
          docker image rm myapp/api:latest || true
          docker image rm myapp/web:latest || true
          docker load < image-api.tar.gz
          docker load < image-web.tar.gz
          docker compose up -d
