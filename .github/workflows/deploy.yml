name: CI/CD Deploy otimizado

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Build da imagem Docker API
      run: docker build -t myapp/api:latest -f src/API/Dockerfile .

    - name: Build da imagem Docker Web
      run: docker build -t myapp/web:latest -f web/Dockerfile .

    - name: Exportar imagens como image-api.tar.gz e image-web.tar.gz
      run: |
        docker save myapp/api:latest | gzip > ./image-api.tar.gz
        docker save myapp/web:latest | gzip > ./image-web.tar.gz

    - name: Listar arquivos na pasta atual (debug)
      run: |
        ls -lh ./image-*.tar.gz compose.yml
        ls -lh ./.env || echo ".env não encontrado"

    - name: Enviar imagens e compose.yml para a VM
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VM_IP }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "image-api.tar.gz,image-web.tar.gz,compose.yml"
        target: "/home/${{ secrets.VM_USER }}/app"

    - name: Rodar docker-compose na VM com imagens carregadas
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VM_IP }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 60m
        command_timeout: 60m
        script: |
          cd /home/${{ secrets.VM_USER }}/app
          docker-compose -f compose.yml down --remove-orphans
          docker image rm myapp/api:latest || true
          docker image rm myapp/web:latest || true
          gunzip -c image-api.tar.gz | docker load
          gunzip -c image-web.tar.gz | docker load
          docker-compose -f compose.yml up -d
